source machine_env.sh

export IMPATH=$gmsim/IM_calculation
export PYTHONPATH=$gmsim/qcore:/$PYTHONPATH:$IMPATH

script_start=`date`
echo "script started running at: $script_start"

{% if sim_dirs %}
echo ___calculating simulations___
{% for sim_dir, sim_name, fault_name in sim_dirs %}
    echo {{sim_dir}}
    time python2 $IMPATH/calculate_ims.py {{sim_dir}}/Acc/BB.bin b -o {{sim_dir}}/../../../IM_calc/ -np {{np}} -i {{sim_name}} -r {{fault_name}} -c {{comp}} -t s {{extended}} {{simple}}

#test before update mgmt_db
timestamp=`date +%Y%m%d_%H%M%S`
res=`python $gmsim/workflow/scripts/im_cal_checkpoint.py {{sim_dir}} {{fault_name}} --t s --v `
#update mgmt_db
if [[ $? == 0 ]]; then
    #passed
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} IM_calculation completed --r {{fault_name}} --force" >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
    #save metadata for collection
    #
else
    #failed
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} IM_calculation failed --r {{fault_name}} --error '$res' --force"  >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
fi
{% endfor %}
{% endif %}


{% if obs_dirs %}
echo ___calculating observed____
{% for obs_dir, obs_name, fault_name in obs_dirs %}
    echo {{obs_dir}}
	time python2 $IMPATH/calculate_ims.py {{obs_dir}}/*/*/accBB a -o {{obs_dir}}/../IM_calc/ -np {{np}} -i {{obs_name}} -r {{fault_name}} -c {{comp}} -t o {{extended}} {{simple}}
{% endfor %}
{% endif %}

{% if rrup_files %}
echo ___calculating rrups___
{% for srf_file, srf_output, fd in rrup_files %}
	time python2 $IMPATH/calculate_rrups.py -np {{np}} -o {{output_dir}}/{{srf_output}}.csv {{station_file}} {{srf_file}} {{fd}} 
{% endfor %}
{% endif %}

date
