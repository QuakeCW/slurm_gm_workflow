
#
source machine_env.sh

#updating the stats in managementDB
if [[ ! -d {{mgmt_db_location}}/mgmt_db_queue ]]; then
    #create the queue folder if not exist
    mkdir {{mgmt_db_location}}/mgmt_db_queue
fi
timestamp=`date +%Y%m%d_%H%M%S`
runtime_fmt="%Y-%m-%d_%H:%M:%S"
start_time=`date +$runtime_fmt`
echo $start_time

echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} EMOD3D running --run_name {{srf_name}} --job $SLURM_JOBID" >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
srun {{tools_dir}}/emod3d-mpi -args "par={{lf_sim_dir}}/e3d.par"

end_time=`date +$runtime_fmt`
echo $end_time

#run test script and update mgmt_db
#test before update
timestamp=`date +%Y%m%d_%H%M%S`
res=`$gmsim/workflow/scripts/test_emod3d.sh {{sim_dir}} {{srf_name}}`
if [[ $? == 0 ]]; then
    #passed
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} EMOD3D completed --run_name {{srf_name}} --force " >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
    if [[ ! -d {{sim_dir}}/ch_log ]]; then
        mkdir {{sim_dir}}/ch_log
    fi  
    run_time=`python -c "from datetime import datetime; tdelta= datetime.strptime('$end_time', '$runtime_fmt') - datetime.strptime('$start_time', '$runtime_fmt'); print tdelta.total_seconds()/3600"`
    nt=`python -c "import params_base as pb; nt = float(pb.sim_duration)/float(pb.dt);print int(nt)"`
    nx=`python -c "import params_base as pb; print pb.nx"`
    ny=`python -c "import params_base as pb; print pb.ny"`
    nz=`python -c "import params_base as pb; print pb.nz"`
    #save meta data
    echo "{{srf_name}} LF $SLURM_NTASKS $run_time $nt $nx $ny $nz $start_time $end_time" >> {{sim_dir}}/ch_log/LF.$timestamp.$SLURM_JOBID.log
else
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} EMOD3D failed --run_name {{srf_name}} --error '$res' --force " >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID   
fi
##source ./version
##TODO:re-enable wct after proper fix
##echo "Saving execution time"
##python $BINPROCESS/wct.py -a $start_time $end_time

