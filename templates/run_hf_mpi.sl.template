
#updating the stats in managementDB
if [[ ! -d {{mgmt_db_location}}/mgmt_db_queue ]]; then
    #create the queue folder if not exist
    mkdir {{mgmt_db_location}}/mgmt_db_queue
fi
timestamp=`date +%Y%m%d_%H%M%S`
echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} HF running --j $SLURM_JOBID" >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
source machine_env.sh

date
# srun python  $BINPROCESS/hfsims-stats-mpi.py {{hf_sim_dir}} {{hf_option}}
# srun python $BINPROCESS/hf_sim.py {{HF_stoch_file}} {{stat_file}} {{HF_binary_output}} -m {{1D_velocity_model}} --duration {{duration}} --dt {{HF_dt}} {{HF_mode}}
{{hf_submit_command}}
date

timestamp=`date +%Y%m%d_%H%M%S`
#test before update
res=`$gmsim/deploy/slurm_gm_workflow/scripts/test_hf.sh {{sim_dir}} {{hf_run_name}} {{srf_name}}`
if [[ $? == 0 ]]; then
    #passed
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} HF completed --j $SLURM_JOBID" >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
else
    echo "python $gmsim/workflow/scripts/management/update_mgmt_db.py {{mgmt_db_location}} HF failed --j $SLURM_JOBID --error '$res'" >> {{mgmt_db_location}}/mgmt_db_queue/$timestamp\_$SLURM_JOBID
fi
